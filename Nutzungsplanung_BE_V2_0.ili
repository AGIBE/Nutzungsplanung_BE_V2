INTERLIS 2.3;
/*
Datenmodell für die Nutzungsplanung im Kanton Bern
  Teilmodelle       : Nutzungsplanung_BE_V2_0_Catalogues, Nutzungsplanung_BE_V2_0_Dossier, Nutzungsplanung_BE_V2_0_Delta
  Datenverwaltung   : Planungsbehörde
  Sprachversion     : DE (TRANSALTION OF-Modell: PlansDAffectation_BE_V2_0.ili)
  Support fachlich  : Amt für Gemeinden und Raumordnung (www.be.ch/agr)
  Support technisch : Amt für Geoinformation (www.be.ch/agi)

  Abkürzungen
  -----------
  AD    : Administratives
  DO    : Dokumente
  RV    : Rechtsvorschrift
  GN    : Grundnutzung
  NZ    : Nutzungszone
  BK    : Bauklasse
  IN    : Innere Nutzung
  SN    : Überlagernde Sondernutzungsplanung
  UE    : Weitere Überlagerungen
  ES    : Lärmempfindlichkeitsstufen
  GG    : Gefahrengebiete
  GR    : Gewässerraum
  NH    : Natur- und Heimatschutz
  BL    : Baulinien
  WE    : Wege
  WF    : Waldfeststellung

  Version    | Modification
  ------------------------------------------------------------------------------
  2022-04-01 | Version 1.0
  2025-05-05 | Version 2.0

*/

!!@ technicalContact=mailto:info.agr@be.ch
!!@ furtherInformation=https://www.raumplanung.dij.be.ch/de/start/eplan.html
MODEL Nutzungsplanung_BE_V2_0 (de)
  AT "http://models.geo.be.ch/Grundlagen_und_Planung/Raumplanung_Grundstueckskataster/"
  VERSION "2025-05-05" =

  IMPORTS GeometryCHLV95_V1;
  IMPORTS CatalogueObjects_V1, Nutzungsplanung_BE_V2_0_Catalogues;

  DOMAIN
    Datum = FORMAT INTERLIS.XMLDate "1848-1-1" .. "2100-12-31";
    LKoord EXTENDS GeometryCHLV95_V1.Coord2 = COORD
      2550000.000 .. 2690000.000 [INTERLIS.m] ,
      1120000.000 .. 1250000.000 [INTERLIS.m] ,
      ROTATION 2 -> 1;
    Polyline = POLYLINE WITH (STRAIGHTS, ARCS) VERTEX LKoord;
    Surface  = SURFACE  WITH (STRAIGHTS, ARCS) VERTEX LKoord WITHOUT OVERLAPS > 0.050;
    Area     = AREA     WITH (STRAIGHTS, ARCS) VERTEX LKoord WITHOUT OVERLAPS > 0.050;

 !! TOPIC Nutzungsplanung
 !! ----------------------
 TOPIC Nutzungsplanung =
  BASKET OID AS INTERLIS.UUIDOID;
  OID AS INTERLIS.UUIDOID;

  DEPENDS ON CatalogueObjects_V1.Catalogues, Nutzungsplanung_BE_V2_0_Catalogues.Catalogues;

    !! Struktur für individuelle Zusatzinformationen
    !! -----------------------------------------------
    STRUCTURE CustomAttribute =
      AttributeName : MANDATORY TEXT*50; !! Muss UNIQUE sein
      AttributeValue : MTEXT*256;
    END CustomAttribute;

    !! ***********************
    !! AD = Administratives
    !! ***********************

    !! Planungsgeschäfte
    !! -----------------------------------------------
    CLASS AD_Planungsgeschaeft =
      Geschaeft_Nummer : MANDATORY TEXT*50;
      Geschaeft_Titel : MANDATORY TEXT*250;
      Geschaeft_ErstelltAm : MANDATORY Datum;
      Ortsplanungsrevision : MANDATORY BOOLEAN;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    UNIQUE Geschaeft_Nummer;
    END AD_Planungsgeschaeft;

    !! Datensatz
    !! -----------------------------------------------
    CLASS AD_Datensatz = !! Muss exakt 1 Eintrag enthalten.
      Planungsbehoerde : MANDATORY 101..999;
      Sprache : MANDATORY (de,fr,de_fr);
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END AD_Datensatz;

    ASSOCIATION Datensatz_Planungsgeschaeft =
      Aktives_Geschaeft -- {0..1} AD_Planungsgeschaeft;
      Datensatz -- {0..1} AD_Datensatz;
    END Datensatz_Planungsgeschaeft;

    !! Datenperimeter (Hoheitsgebiet der Planungsbehörde)
    !! -----------------------------------------------
    CLASS AD_Datenperimeter =
      Perimeter_Name : MANDATORY TEXT*200;
      Perimeter_Zeitstand : MANDATORY Datum;
      Geometrie : MANDATORY Area;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END AD_Datenperimeter;

    !! Externe Geodienste (optional)
    !! -----------------------------------------------
    CLASS AD_Geoservice =
      Geoservice_Name : MANDATORY TEXT*200;
      Geoservice_URL : MANDATORY URI;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END AD_Geoservice;

    !! Amt (Zuständige Stellen)
    !! -----------------------------------------------
    CLASS AD_Amt =
      Name : MANDATORY TEXT*200;
      UID : TEXT*15;
      AmtImWeb : URI;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END AD_Amt;

    !! ***********************
    !! DO = Dokumente
    !! ***********************

    !! Rechtsvorschriften und Hinweisdokumente
    !! -----------------------------------------------
    CLASS DO_Dokument =
      Titel : MANDATORY TEXT*500;
      Abkuerzung : TEXT*50;
      OffizielleNr : TEXT*50;
      PDF_Dateiname : MANDATORY TEXT*200;
      Dokumentart : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.Dokumentart_CatalogueReference;
      Dokumentverbindlichkeit : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.Dokumentverbindlichkeit_CatalogueReference;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    UNIQUE PDF_Dateiname;
    END DO_Dokument;

    ASSOCIATION Dokument_Geschaeft =
      Planungsgeschaeft -- {0..1} AD_Planungsgeschaeft;
      Dokument -- {0..*} DO_Dokument;
    END Dokument_Geschaeft;

    ASSOCIATION Dokument_ZustaendigeStelle =
      ZustaendigeStelle -- {0..1} AD_Amt;
      Dokument -- {0..*} DO_Dokument;
    END Dokument_ZustaendigeStelle;

    !! WeitereDokumente (Verlinkung Dokument zu Dokument)
    !! -----------------------------------------------
    CLASS DO_WeitereDokumente =
      ArtikelNr : TEXT*50;
      VorschriftenBleibenIdentisch : BOOLEAN; !! default = false
    END DO_WeitereDokumente;

    ASSOCIATION WeitereDokumente_Dokument =
      Dokument -- {1} DO_Dokument;
      Parent -- {0..*} DO_WeitereDokumente;
    END WeitereDokumente_Dokument;

    ASSOCIATION Weiteredokumente_WeiteresDokument =
      WeiteresDokument -- {1} DO_Dokument;
      Child -- {0..*} DO_WeitereDokumente;
    END Weiteredokumente_WeiteresDokument;

    !! Änderungsdokumente (Änderungen an Rechtsvorschriften)
    !! -----------------------------------------------
    CLASS DO_DokumentRevision =
      Titel : MANDATORY TEXT*500;
      Abkuerzung : TEXT*50;
      OffizielleNr : TEXT*50;
      PDF_Dateiname : MANDATORY TEXT*200;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    UNIQUE PDF_Dateiname;
    END DO_DokumentRevision;

    ASSOCIATION DokumentRevision_Geschaeft =
      Planungsgeschaeft -- {0..1} AD_Planungsgeschaeft;
      Aenderungsdokument -- {0..*} DO_DokumentRevision;
    END DokumentRevision_Geschaeft;

    ASSOCIATION DokumentRevision_Dokument =
      Erstversion -- {1} DO_Dokument;
      Aenderungsdokument -- {0..*} DO_DokumentRevision;
    END DokumentRevision_Dokument;

    !! ***********************
    !! Geodaten
    !! ***********************

    !! Basis-Klasse Typ
    !! -----------------------------------------------
    CLASS BaseClassType (ABSTRACT) =
      Bezeichnung : MANDATORY TEXT*500;
      Abkuerzung : TEXT*50;
      Kategorie : TEXT*100;
      Darstellungscode : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.Darstellungscode_CatalogueReference;
      KantArt : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.Typ_CatalogueReference;
      Verbindlichkeit : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.Verbindlichkeit_CatalogueReference;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END BaseClassType;

    ASSOCIATION BaseClass_ZustaendigeStelle =
      ZustaendigeStelle -- {0..1} AD_Amt;
      Typ -- {0..*} BaseClassType;
    END BaseClass_ZustaendigeStelle;

    !! Basis-Klasse RV (Verlinkung Typ zu Dokument)
    !! -----------------------------------------------
    CLASS BaseClassRV (ABSTRACT) =
      ArtikelNr : TEXT*50;
      VorschriftenBleibenIdentisch : BOOLEAN; !! default = false
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END BaseClassRV;

    ASSOCIATION BaseClassRV_Dokument =
      Vorschrift -- {1} DO_Dokument;
      BaseClassRV -- {0..*} BaseClassRV;
    END BaseClassRV_Dokument;

    !! Basis-Klassen Geometrie
    !! -----------------------------------------------
    CLASS BaseClassPoint (ABSTRACT) =
      Label : TEXT*50;
      Geometrie : MANDATORY LKoord;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END BaseClassPoint;

    CLASS BaseClassPolyline (ABSTRACT) =
      Label : TEXT*50;
      Geometrie : MANDATORY Polyline;
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END BaseClassPolyline;

    CLASS BaseClassPolygon (ABSTRACT) =
      Label : TEXT*50;
      Geometrie : MANDATORY Surface; !! AREA-Prüfung erfolgt via Checkservice
      Zusatz_Attribute : BAG {0..*} OF CustomAttribute;
    END BaseClassPolygon;

    ASSOCIATION BaseClassPoint_Geschaeft =
      Planungsgeschaeft -- {0..1} AD_Planungsgeschaeft;
      BaseClassPoint -- {0..*} BaseClassPoint;
    END BaseClassPoint_Geschaeft;

    ASSOCIATION BaseClassPolyline_Geschaeft =
      Planungsgeschaeft -- {0..1} AD_Planungsgeschaeft;
      BaseClassPolyline -- {0..*} BaseClassPolyline;
    END BaseClassPolyline_Geschaeft;

    ASSOCIATION BaseClassPolygon_Geschaeft =
      Planungsgeschaeft -- {0..1} AD_Planungsgeschaeft;
      BaseClassPolygon -- {0..*} BaseClassPolygon;
    END BaseClassPolygon_Geschaeft;

    !! ***********************
    !! GN = Grundnutzung
    !! ***********************

    !! GN_Typ
    !! -----------------------------------------------
    CLASS GN_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.GN_KantArt_CatalogueReference;
    END GN_Typ;

    !! GN_RV
    !! -----------------------------------------------
    CLASS GN_RV
    EXTENDS BaseClassRV =
    END GN_RV;

    ASSOCIATION GN_RV_Typ =
      Typ -- {1} GN_Typ;
      RV -- {0..*} GN_RV;
    END GN_RV_Typ;

    !! GN_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS GN_Flaeche
    EXTENDS BaseClassPolygon =
    END GN_Flaeche;

    ASSOCIATION GN_Flaeche_Typ =
      Typ -- {1} GN_Typ;
      GN_Flaeche -- {0..*} GN_Flaeche;
    END GN_Flaeche_Typ;

    !! ***********************
    !! NZ = Nutzungszone
    !! ***********************

    !! NZ_Typ
    !! -----------------------------------------------
    CLASS NZ_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.NZ_KantArt_CatalogueReference;
    END NZ_Typ;

    !! NZ_RV
    !! -----------------------------------------------
    CLASS NZ_RV
    EXTENDS BaseClassRV =
    END NZ_RV;

    ASSOCIATION NZ_RV_Typ =
      Typ -- {1} NZ_Typ;
      RV -- {0..*} NZ_RV;
    END NZ_RV_Typ;

    !! NZ_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS NZ_Flaeche
    EXTENDS BaseClassPolygon =
    END NZ_Flaeche;

    ASSOCIATION NZ_Flaeche_Typ =
      Typ -- {1} NZ_Typ;
      NZ_Flaeche -- {0..*} NZ_Flaeche;
    END NZ_Flaeche_Typ;

    !! ***********************
    !! BK = Bauklasse/Bauzone
    !! ***********************

    !! BK_Typ
    !! -----------------------------------------------
    CLASS BK_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.BK_KantArt_CatalogueReference;
    END BK_Typ;

    ASSOCIATION BK_NZ_Typ =
      NZ_Typ -- {0..1} NZ_Typ; !! Key-Attribut für die Zusammenführung von NZ und BK
      BK_Typ -- {0..*} BK_Typ;
    END BK_NZ_Typ;

    !! BK_RV
    !! -----------------------------------------------
    CLASS BK_RV
    EXTENDS BaseClassRV =
    END BK_RV;

    ASSOCIATION BK_RV_Typ =
      Typ -- {1} BK_Typ;
      RV -- {0..*} BK_RV;
    END BK_RV_Typ;

    !! BK_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS BK_Flaeche
    EXTENDS BaseClassPolygon =
    END BK_Flaeche;

    ASSOCIATION BK_Flaeche_Typ =
      Typ -- {1} BK_Typ;
      BK_Flaeche -- {0..*} BK_Flaeche;
    END BK_Flaeche_Typ;
    
    ASSOCIATION BK_NZ_Flaeche =
      NZ_Flaeche -- {0..1} NZ_Flaeche; !! Key-Attribut für die Zusammenführung von NZ und BK
      BK_Flaeche -- {0..*} BK_Flaeche;
    END BK_NZ_Flaeche;

    !! ***********************
    !! IN = Innere Nutzung (von ZPP,UeO,USP,SBV)
    !! ***********************

    !! IN_Typ
    !! -----------------------------------------------
    CLASS IN_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.IN_KantArt_CatalogueReference;
    END IN_Typ;

    !! IN_RV
    !! -----------------------------------------------
    CLASS IN_RV
    EXTENDS BaseClassRV =
    END IN_RV;

    ASSOCIATION IN_RV_Typ =
      Typ -- {1} IN_Typ;
      RV -- {0..*} IN_RV;
    END IN_RV_Typ;

    !! IN_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS IN_Flaeche
    EXTENDS BaseClassPolygon =
    END IN_Flaeche;

    ASSOCIATION IN_Flaeche_Typ =
      Typ -- {1} IN_Typ;
      IN_Flaeche -- {0..*} IN_Flaeche;
    END IN_Flaeche_Typ;

    !! ***********************
    !! SN = Überlagernde Sondernutzungsplanung
    !! ***********************

    !! SN_Typ
    !! -----------------------------------------------
    CLASS SN_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.SN_KantArt_CatalogueReference;
    END SN_Typ;

    !! SN_RV
    !! -----------------------------------------------
    CLASS SN_RV
    EXTENDS BaseClassRV =
    END SN_RV;

    ASSOCIATION SN_RV_Typ =
      Typ -- {1} SN_Typ;
      RV -- {0..*} SN_RV;
    END SN_RV_Typ;

    !! SN_Flaeche (SURFACE)
    !! -----------------------------------------------
    CLASS SN_Flaeche
    EXTENDS BaseClassPolygon =
    END SN_Flaeche;

    ASSOCIATION SN_Flaeche_Typ =
      Typ -- {1} SN_Typ;
      SN_Flaeche -- {0..*} SN_Flaeche;
    END SN_Flaeche_Typ;

    !! ***********************
    !! UE = Ueberlagerung
    !! ***********************

    !! UE_Typ
    !! -----------------------------------------------
    CLASS UE_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.UE_KantArt_CatalogueReference;
    END UE_Typ;

    !! UE_RV
    !! -----------------------------------------------
    CLASS UE_RV
    EXTENDS BaseClassRV =
    END UE_RV;

    ASSOCIATION UE_RV_Typ =
      Typ -- {1} UE_Typ;
      RV -- {0..*} UE_RV;
    END UE_RV_Typ;

    !! UE_Punkt (COORD)
    !! -----------------------------------------------
    CLASS UE_Punkt
    EXTENDS BaseClassPoint =
    END UE_Punkt;

    ASSOCIATION UE_Punkt_Typ =
      Typ -- {1} UE_Typ;
      UE_Punkt -- {0..*} UE_Punkt;
    END UE_Punkt_Typ;

    !! UE_Linie (POLYLINE)
    !! -----------------------------------------------
    CLASS UE_Linie
    EXTENDS BaseClassPolyline =
    END UE_Linie;

    ASSOCIATION UE_Linie_Typ =
      Typ -- {1} UE_Typ;
      UE_Linie -- {0..*} UE_Linie;
    END UE_Linie_Typ;

    !! UE_Flaeche (SURFACE)
    !! -----------------------------------------------
    CLASS UE_Flaeche
    EXTENDS BaseClassPolygon =
    END UE_Flaeche;

    ASSOCIATION UE_Flaeche_Typ =
      Typ -- {1} UE_Typ;
      UE_Flaeche -- {0..*} UE_Flaeche;
    END UE_Flaeche_Typ;

    !! *********************************
    !! ES = Laermempfindlichkeitsstufen
    !! *********************************

    !! ES_Typ
    !! -----------------------------------------------
    CLASS ES_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.ES_KantArt_CatalogueReference;
    END ES_Typ;

    !! ES_RV
    !! -----------------------------------------------
    CLASS ES_RV
    EXTENDS BaseClassRV =
    END ES_RV;

    ASSOCIATION ES_RV_Typ =
      Typ -- {1} ES_Typ;
      RV -- {0..*} ES_RV;
    END ES_RV_Typ;

    !! ES_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS ES_Flaeche
    EXTENDS BaseClassPolygon =
    END ES_Flaeche;

    ASSOCIATION ES_Flaeche_Typ =
      Typ -- {1} ES_Typ;
      ES_Flaeche -- {0..*} ES_Flaeche;
    END ES_Flaeche_Typ;

    !! ***********************
    !! GG = Gefahrengebiete
    !! ***********************

    !! GG_Typ
    !! -----------------------------------------------
    CLASS GG_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.GG_KantArt_CatalogueReference;
    END GG_Typ;

    !! GG_RV
    !! -----------------------------------------------
    CLASS GG_RV
    EXTENDS BaseClassRV =
    END GG_RV;

    ASSOCIATION GG_RV_Typ =
      Typ -- {1} GG_Typ;
      RV -- {0..*} GG_RV;
    END GG_RV_Typ;

    !! GG_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS GG_Flaeche
    EXTENDS BaseClassPolygon =
    END GG_Flaeche;

    ASSOCIATION GG_Flaeche_Typ =
      Typ -- {1} GG_Typ;
      GG_Flaeche -- {0..*} GG_Flaeche;
    END GG_Flaeche_Typ;

    !! ***********************
    !! GR = Gewaesserraum
    !! ***********************

    !! GR_Typ
    !! -----------------------------------------------
    CLASS GR_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.GR_KantArt_CatalogueReference;
    END GR_Typ;

    !! GR_RV
    !! -----------------------------------------------
    CLASS GR_RV
    EXTENDS BaseClassRV =
    END GR_RV;

    ASSOCIATION GR_RV_Typ =
      Typ -- {1} GR_Typ;
      RV -- {0..*} GR_RV;
    END GR_RV_Typ;

    !! GR_Flaeche (AREA)
    !! -----------------------------------------------
    CLASS GR_Flaeche
    EXTENDS BaseClassPolygon =
    END GR_Flaeche;

    ASSOCIATION GR_Flaeche_Typ =
      Typ -- {1} GR_Typ;
      GR_Flaeche -- {0..*} GR_Flaeche;
    END GR_Flaeche_Typ;

    !! ****************************
    !! NH = Natur- und Heimatschutz
    !! ****************************

    !! NH_Typ
    !! -----------------------------------------------
    CLASS NH_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.NH_KantArt_CatalogueReference;
    END NH_Typ;

    !! NH_RV
    !! -----------------------------------------------
    CLASS NH_RV
    EXTENDS BaseClassRV =
    END NH_RV;

    ASSOCIATION NH_RV_Typ =
      Typ -- {1} NH_Typ;
      RV -- {0..*} NH_RV;
    END NH_RV_Typ;

    !! NH_Punkt (COORD)
    !! -----------------------------------------------
    CLASS NH_Punkt
    EXTENDS BaseClassPoint =
    END NH_Punkt;

    ASSOCIATION NH_Punkt_Typ =
      Typ -- {1} NH_Typ;
      NH_Punkt -- {0..*} NH_Punkt;
    END NH_Punkt_Typ;

    !! NH_Linie (POLYLINE)
    !! -----------------------------------------------
    CLASS NH_Linie
    EXTENDS BaseClassPolyline =
    END NH_Linie;

    ASSOCIATION NH_Linie_Typ =
      Typ -- {1} NH_Typ;
      NH_Linie -- {0..*} NH_Linie;
    END NH_Linie_Typ;

    !! NH_Flaeche (SURFACE)
    !! -----------------------------------------------
    CLASS NH_Flaeche
    EXTENDS BaseClassPolygon =
    END NH_Flaeche;

    ASSOCIATION NH_Flaeche_Typ =
      Typ -- {1} NH_Typ;
      NH_Flaeche -- {0..*} NH_Flaeche;
    END NH_Flaeche_Typ;

    !! ***********************
    !! BL = Baulinien
    !! ***********************

    !! BL_Typ
    !! -----------------------------------------------
    CLASS BL_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.BL_KantArt_CatalogueReference;
    END BL_Typ;

    !! BL_RV
    !! -----------------------------------------------
    CLASS BL_RV
    EXTENDS BaseClassRV =
    END BL_RV;

    ASSOCIATION BL_RV_Typ =
      Typ -- {1} BL_Typ;
      RV -- {0..*} BL_RV;
    END BL_RV_Typ;

    !! BL_Linie (POLYLINE)
    !! -----------------------------------------------
    CLASS BL_Linie
    EXTENDS BaseClassPolyline =
    END BL_Linie;

    ASSOCIATION BL_Linie_Typ =
      Typ -- {1} BL_Typ;
      BL_Linie -- {0..*} BL_Linie;
    END BL_Linie_Typ;

    !! BL_Flaeche (SURFACE)
    !! -----------------------------------------------
    CLASS BL_Flaeche
    EXTENDS BaseClassPolygon =
    END BL_Flaeche;

    ASSOCIATION BL_Flaeche_Typ =
      Typ -- {1} BL_Typ;
      BL_Flaeche -- {0..*} BL_Flaeche;
    END BL_Flaeche_Typ;

    !! ***********************
    !! WE = Wege
    !! ***********************

    !! WE_Typ
    !! -----------------------------------------------
    CLASS WE_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.WE_KantArt_CatalogueReference;
    END WE_Typ;

    !! WE_RV
    !! -----------------------------------------------
    CLASS WE_RV
    EXTENDS BaseClassRV =
    END WE_RV;

    ASSOCIATION WE_RV_Typ =
      Typ -- {1} WE_Typ;
      RV -- {0..*} WE_RV;
    END WE_RV_Typ;

    !! WE_Linie (POLYLINE)
    !! -----------------------------------------------
    CLASS WE_Linie
    EXTENDS BaseClassPolyline =
    END WE_Linie;

    ASSOCIATION WE_Linie_Typ =
      Typ -- {1} WE_Typ;
      WE_Linie -- {0..*} WE_Linie;
    END WE_Linie_Typ;

    !! WE_Flaeche (SURFACE)
    !! -----------------------------------------------
    CLASS WE_Flaeche
    EXTENDS BaseClassPolygon =
    END WE_Flaeche;

    ASSOCIATION WE_Flaeche_Typ =
      Typ -- {1} WE_Typ;
      WE_Flaeche -- {0..*} WE_Flaeche;
    END WE_Flaeche_Typ;

    !! ***********************
    !! WF = Waldfeststellung
    !! ***********************

    !! WF_Typ
    !! -----------------------------------------------
    CLASS WF_Typ
    EXTENDS BaseClassType =
      KantArt (EXTENDED) : MANDATORY Nutzungsplanung_BE_V2_0_Catalogues.Catalogues.WF_KantArt_CatalogueReference;
    END WF_Typ;

    !! WF_RV
    !! -----------------------------------------------
    CLASS WF_RV
    EXTENDS BaseClassRV =
    END WF_RV;

    ASSOCIATION WF_RV_Typ =
      Typ -- {1} WF_Typ;
      RV -- {0..*} WF_RV;
    END WF_RV_Typ;

    !! WF_Linie (POLYLINE)
    !! -----------------------------------------------
    CLASS WF_Linie
    EXTENDS BaseClassPolyline =
    END WF_Linie;

    ASSOCIATION WF_Linie_Typ =
      Typ -- {1} WF_Typ;
      WF_Linie -- {0..*} WF_Linie;
    END WF_Linie_Typ;

 END Nutzungsplanung;

END Nutzungsplanung_BE_V2_0.